#!/usr/bin/perl
use strict;
use warnings;

my $commands = {
  on    => "on",
  off   => "standby",
  volup => "volup",
  voldn => "voldown",
};

my $usage = "Usage:
  $0 [OPTS] [CMD]
     send \"CMD address\" using cec-client
  $0 [OPTS] vol +N
     same as doing 'volup' N times, using only one cec-client session
  $0 [OPTS] vol -N
     same as doing 'voldn' N times, using only one cec-client session

  OPTS:
    --tv  use address 0 {default}
    --av  use address 5

  CMD:
    " . (join "\n    ", map {"$_  => $$commands{$_}"} sort keys %$commands) . "
";

sub cec($@);

sub main(@){
  my $addr = 0;
  while(@_ > 0 and $_[0] =~ /^(--tv|--av)$/){
    my $opt = shift;
    $addr = 0 if $opt =~ /^--tv$/;
    $addr = 5 if $opt =~ /^--av$/;
  }

  if(@_ == 1 and defined $$commands{$_[0]}){
    cec $addr, "$$commands{$_[0]} $addr";
  }elsif(@_ == 2 and $_[0] =~ /^vol$/ and $_[1] =~ /^(\+|-)(\d+)$/){
    my ($sign, $vol) = ($1, $2);
    my $cmd = $sign eq "+" ? $$commands{volup} : $$commands{voldn};
    cec $addr, ("$cmd $addr")x$vol;
  }else{
    die $usage;
  }
}

sub cec($@){
  my ($addr, @cmds) = @_;
  open FH, "| cec-client >/dev/null 2>/dev/null";
  print FH "name $addr\n";
  for my $cmd(@cmds){
    chomp $cmd;
    print FH "$cmd\n";
  }
  print FH "quit\n";
  close FH;
  die "Error running cec-client\n" if $? != 0;
}

&main(@ARGV);
