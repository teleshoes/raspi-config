#!/usr/bin/python
import os
import sys

def main():
  cmd = sys.argv[1]
  args = sys.argv[1:]
  spawnDaemon(cmd, args)

def spawnDaemon(cmd, args):
  # fork the first time (to make a non-session-leader child process)
  try:
    pid = os.fork()
  except OSError, e:
    raise RuntimeError("1st fork failed: %s [%d]" % (e.strerror, e.errno))
  if pid != 0:
    # parent (calling) process is all done
    return

  # detach from controlling terminal (to make child a session-leader)
  os.setsid()
  try:
    pid = os.fork()
  except OSError, e:
    raise RuntimeError("2nd fork failed: %s [%d]" % (e.strerror, e.errno))
    raise Exception, "%s [%d]" % (e.strerror, e.errno)

  if pid != 0:
    # child process is all done
    os._exit(0)

  # grandchild process now non-session-leader, detached from parent
  # grandchild process must now close all open files
  try:
    maxfd = os.sysconf("SC_OPEN_MAX")
  except (AttributeError, ValueError):
    maxfd = 1024

  for fd in range(maxfd):
    try:
      os.close(fd)
    except OSError: # ERROR, fd wasn't open to begin with (ignored)
      pass

  os.execv(cmd, args)

if __name__ == "__main__":
  sys.exit(main())

