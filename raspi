#!/usr/bin/perl
use strict;
use warnings;

my $baseDir = "$ENV{HOME}/Code/raspi";

my $hostname = `cat $baseDir/.hostname`;
my @ips = `cat $baseDir/.ipguesses`;
my @macs = `cat $baseDir/.macs`;

my $defaultUser = 'root';

#if script invoked is `pi`, default to user pi
if($0 =~ /^(.*\/)?pi$/){
  $defaultUser = 'pi';
}

chomp $hostname;
chomp foreach @ips;
chomp foreach @macs;

#adds a line to the host file for routers that dont set hostname
my %ssidIps = (
  'flipsafad' => '192.168.11.57',
  'da5id'     => '192.168.11.57',
);

if(@ARGV >= 1 and $ARGV[0] eq '-vnc'){
  shift;
  my @args = @ARGV;
  exec "$baseDir/raspi-vnc", @args;
}

my $ssh = 0;
my $bash = 0;
my $user;
if(@ARGV > 0 and $ARGV[0] =~ /^(-s|-b)$/){
  $ssh = 1;
  my $arg = shift;
  if(@ARGV > 1 and $ARGV[0] eq '-u'){
    shift;
    $user = shift;
  }else{
    $user = $defaultUser;
  }
  if($arg eq '-b'){
    die "-b command must be a single string\n" if @ARGV != 1;
    $bash = 1;
  }
}

sub getHosts(){
  for my $line(`cat /etc/hosts`){
    if($line =~ /^(\d+\.\d+\.\d+\.\d+)\s*$hostname\s*#raspi$/){
      return $1;
    }
  }
  return undef;
}

sub setHosts($){
  my $ip = shift;
  my $old = getHosts();
  if(not defined $ip){
    if(defined getHosts()){
      print STDERR "removing $hostname line from /etc/hosts\n";
    }else{
      return;
    }
  }else{
    if(not defined $old or $old ne $ip){
      print STDERR "replacing $hostname line in /etc/hosts\n";
    }else{
      return;
    }
  }

  my @lines = `cat /etc/hosts`;
  for my $line(@lines){
    if($line =~ /^(\d+\.\d+\.\d+\.\d+)\s*$hostname\s*#raspi$/){
      $line = '';
    }
  }
  if(defined $ip and $ip =~ /^\d+\.\d+\.\d+\.\d+$/){
    push @lines, "$ip\t$hostname#raspi\n";
  }
  open FH, "| sudo tee /etc/hosts > /dev/null"
    or die "Couldnt open /etc/hosts for writing\n";
  print FH @lines;
  close FH;
}

my $iwconfig = `iwconfig 2>/dev/null`;
my $ssid = lc $1 if $iwconfig =~ /ESSID:"(.*)"/;
my $ip = defined $ssid ? $ssidIps{$ssid} : undef;
if(defined $ip){
  setHosts $ip; 
}else{
  setHosts undef;
  system ('ensure-host', $hostname, @ips);
  if($? != 0){
    die "Error ensuring host: $!\n";
  }
}

if($ssh){
  if($bash){
    my $c = "@ARGV";
    $c =~ s/'/'\\''/g;
    exec "ssh", "$user\@$hostname", "bash -c '$c'";
  }else{
    exec "ssh", "$user\@$hostname", @ARGV;
  }
}elsif(@ARGV > 0){
  die "Usage:
    $0
      establish hosts file, up devices, and print hostname
    $0 -vnc <server args> [-- <client args>]
      call raspi-vnc {e.g. `$0 -vnc rotate90 -- -quality 0`}
    $0 -s [-u USER] CMD ARG ARG..
      setup and then ssh with command and args
    $0 -b [-u USER] SHELLCMD 
      setup and then invoke single cmd string in bash\n";
}else{
  print "$hostname\n";
}
